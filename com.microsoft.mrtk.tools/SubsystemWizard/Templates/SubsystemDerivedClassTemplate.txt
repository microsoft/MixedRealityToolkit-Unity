// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
// TODO: [Optional] Add additional copyright statement(s).

using Microsoft.MixedReality.Toolkit.Subsystems;
using System;
using UnityEngine;
using UnityEngine.Scripting;

namespace Microsoft.MixedReality.Toolkit.Accessibility
{
    [Preserve]
    [MRTKSubsystem(
        Name = "com.microsoft.mixedreality.accessibility",
        DisplayName = "%DISPLAYNAME%",
        Author = "%COMPANYNAME%",
        ProviderType = typeof(%SUBSYSTEMNAME%Provider),
        SubsystemTypeOverride = typeof(%SUBSYSTEMNAME),
        ConfigType = typeof(%CONFIGTYPE%))]
    public class %SUBSYSTEMNAME% : %SUBSYSTEMBASECLASSNAME%
    {
        [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
        static void Register()
        {
            // Fetch subsystem metadata from the attribute.
            var cinfo = XRSubsystemHelpers.ConstructCinfo<%SUBSYSTEMNAME%, %SUBSYSTEMBASECLASSNAME%Cinfo>();

            if (!%SUBSYSTEMNAME%.Register(cinfo))
            {
                Debug.LogError($"Failed to register the {cinfo.Name} subsystem.");
            }
        }

        [Preserve]
        class %SUBSYSTEMNAME%Provider : Provider
        {
            protected %CONFIGTYPE% Config { get; }

            public %SUBSYSTEMNAME%Provider() : base()
            {
                Config = XRSubsystemHelpers.GetConfiguration<%CONFIGTYPE%, %SUBSYSTEMNAME%>();
                
                // TODO: Apply the configuration to the provider.
            }

            #region I%SUBSYSTEMBASECLASSNAME% implementation

            // TODO: Add the provider implementation.

            #endregion %SUBSYSTEMBASECLASSNAME% implementation
        }
    }
}
